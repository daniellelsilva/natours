@import './abstracts//variables.scss';
@import './abstracts/mixins.scss';

.section-book {
  padding: 15rem 0;
  position: relative;
  background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.div-book {
  margin: 0 auto;
  width: 75%;
}

.book {
  background-image: linear-gradient(105deg, rgba($color-white, .9) 0%, rgba($color-white, .9) 49.9%, transparent 50%) ,url(../images/nat-10.jpg);
  background-size: cover;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba($color-black, .2);

  @include respond(tab-land) {
    background-image: linear-gradient(105deg, rgba($color-white, .9) 0%, rgba($color-white, .9) 64.8%, transparent 65%) ,url(../images/nat-10.jpg);
  }

  @include respond(tab-port) {
    background-image: linear-gradient(to right, rgba($color-white, .9) 0%, rgba($color-white, .9) 100%) ,url(../images/nat-10.jpg);
  }

  &-form {
    width: 50%;
    padding: 6rem;

    @include respond(tab-land) {
      width: 65%;
    }

    @include respond(tab-port) {
      width: 100%;
    }
  }
}

.form {

  &-group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &-input {
    font-size: 1.5rem;
    font-family: inherit;
    color: $color-black;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, .5);
    border: none;
    width: 90%;
    display: block;
    // setar cor transparente aqui para não desconfigurar quando a border aparece no focus
    border-bottom: 3px solid transparent;
    transition: all .4s;

    @include respond(tab-port) {
      width: 100%;
    }

      &::-webkit-input-placeholder {
        color: $color-grey-dark-1;
      }

      &:focus {
        outline: none;
        box-shadow: 0 1rem 2rem rgba($color-black, .1);
        border-bottom: 3px solid $color-primary;
      }

      &:focus:invalid {
        border-bottom: 3px solid $color-secondary-dark;
      }
  }


  &-label {
   font-size: 1.2rem;
   font-weight: 700;
   margin: .7rem 0 0 2rem;
   display: block;
   transition: all .3s;
  }

  // quando o placeholder estiver em tela, a label fica escondida
  &-input:placeholder-shown + &-label {
    opacity: 0;
    // colocar opacidade pq somenente a visibilidade não iria nos permitir animar com o transition
    visibility: hidden;
    // vai fazer a label descer
    transform: translateY(-4rem);
  }

  &-radio-group {
    width: 50%;
    display: inline-block;

    @include respond(tab-port) {
      width: 100%;
      margin-bottom: 2rem;
    }
  }

  &-radio-input {
    display: none;
  }

  &-radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &-radio-btn {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -.4rem;

    &::after {
      content: "";
      display: block;
      height: 1.1rem;
      width: 1.1rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity .2s;
    }
  }

  // pega o irmão direto do radio input (que é a label) e vai pegar o span que está dentro da label 
  &-radio-input:checked ~ &-radio-label &-radio-btn::after {
    opacity: 1;
  }
}

#small, #large {
  width: fit-content;
}

.btn-next-step {
  margin: 2rem 0;
}